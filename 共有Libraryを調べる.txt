-------------------------------------------------------------------
必要な共有Libraryを調べる (ldd, objdump, readelf)
-------------------------------------------------------------------

lddとobjdumpの違い:
objdumpは、object自体が未解決のシンボルを含むLibraryとしてリストしているものを単純にdumpします。
lddは、ld.soが実際にLoadするLibraryをリストしています。そして逆にたどるので、それらのLibraryによって何がLoadされるのかが分かります。

そのため、lddは、実行時に実際に使用可能にする必要があるものについて、遥かに優れた全体像を提供します。
しかし、コンパイル時やリンク時の問題を解決する時には、objdumpが非常に役立ちます。

-------------------------------------------------------------------
(1) ldd
-------------------------------------------------------------------
$ ldd /usr/bin/lsof 
	linux-vdso.so.1 =>  (0x00007ffe3c8b3000)
	libselinux.so.1 => /lib/x86_64-linux-gnu/libselinux.so.1 (0x00007fe047b80000)
	libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007fe0477b6000)
	libpcre.so.3 => /lib/x86_64-linux-gnu/libpcre.so.3 (0x00007fe047546000)
	libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007fe047341000)
	/lib64/ld-linux-x86-64.so.2 (0x000055f4db64c000)
	libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007fe047124000)

-------------------------------------------------------------------
(2) objdump
-------------------------------------------------------------------
$ objdump -p /usr/bin/lsof | grep NEEDED
  NEEDED               libselinux.so.1
  NEEDED               libc.so.6

全て出力して見ると:
$ objdump -p /usr/bin/lsof

/usr/bin/lsof:     file format elf64-x86-64

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000000040 paddr 0x0000000000000040 align 2**3
         filesz 0x00000000000001f8 memsz 0x00000000000001f8 flags r-x
  INTERP off    0x0000000000000238 vaddr 0x0000000000000238 paddr 0x0000000000000238 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**21
         filesz 0x0000000000026194 memsz 0x0000000000026194 flags r-x
    LOAD off    0x0000000000026a48 vaddr 0x0000000000226a48 paddr 0x0000000000226a48 align 2**21
         filesz 0x0000000000000b40 memsz 0x0000000000001580 flags rw-
 DYNAMIC off    0x0000000000026a88 vaddr 0x0000000000226a88 paddr 0x0000000000226a88 align 2**3
         filesz 0x00000000000001d0 memsz 0x00000000000001d0 flags rw-
    NOTE off    0x0000000000000254 vaddr 0x0000000000000254 paddr 0x0000000000000254 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
EH_FRAME off    0x0000000000023c78 vaddr 0x0000000000023c78 paddr 0x0000000000023c78 align 2**2
         filesz 0x00000000000003ec memsz 0x00000000000003ec flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000026a48 vaddr 0x0000000000226a48 paddr 0x0000000000226a48 align 2**0
         filesz 0x00000000000005b8 memsz 0x00000000000005b8 flags r--

Dynamic Section:
  NEEDED               libselinux.so.1            //
  NEEDED               libc.so.6                  //
  INIT                 0x0000000000002560
  FINI                 0x000000000001f5a4
  INIT_ARRAY           0x0000000000226a48
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000226a50
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x0000000000000298
  STRTAB               0x0000000000000e48
  SYMTAB               0x00000000000002d8
  STRSZ                0x00000000000004b8
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000226c58
  RELA                 0x0000000000001468
  RELASZ               0x00000000000010f8
  RELAENT              0x0000000000000018
  BIND_NOW             0x0000000000000000
  FLAGS_1              0x0000000008000001
  VERNEED              0x00000000000013f8
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x0000000000001300
  RELACOUNT            0x0000000000000042

Version References:
  required from libc.so.6:
    0x0d696913 0x00 07 GLIBC_2.3
    0x06969191 0x00 06 GLIBC_2.11
    0x06969194 0x00 05 GLIBC_2.14
    0x0d696914 0x00 04 GLIBC_2.4
    0x09691974 0x00 03 GLIBC_2.3.4
    0x09691a75 0x00 02 GLIBC_2.2.5


-------------------------------------------------------------------
3) readelf -a xxx | grep NEEDED
-------------------------------------------------------------------
$ readelf -a xxx | grep NEEDED
$ readelf -d /sbin/depmod | grep NEEDED
 0x00000001 (NEEDED)                     Shared library: [libc.so.6]
 
 
 
 
また、lddについては、信頼できない実行ファイルに対してlddを使ってはいけません。原因は、
lddのmanより：
    Security
    Be aware that in some circumstances (e.g., where the program specifies an ELF interpreter other than ld-linux.so), some versions of ldd may attempt to obtain the dependency information by attempting to directly execute the program(which may lead to the execution of whatever code is defined in the program's ELF interpreter, and perhaps to execution of the program itself).
    Thus, you should never employ ldd on an untrusted executable, since this may result in the execution of arbitrary code.

｢依存するライブラリの情報を得るために、lddがそのバイナリ(のdynamic linker?)を実行してしまうケースが有るから｣
である

